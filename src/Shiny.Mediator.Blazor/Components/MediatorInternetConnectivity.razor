@using Shiny.Mediator.Infrastructure
@implements IDisposable
@inject IMediator Mediator
@inject IInternetService Internet
@if (!Internet.IsAvailable && ChildContent != null)
{
    @ChildContent
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public bool BroadcastEvent { get; set; } = true;
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Internet.StateChanged += OnInternetStateChanged;
    }

    async void OnInternetStateChanged(object? sender, bool e)
    {
        await InvokeAsync(StateHasChanged);
        if (BroadcastEvent)
            await Mediator.Publish(new ConnectivityChanged(Internet.IsAvailable));
    }

    public void Dispose()
    {
        Internet.StateChanged -= OnInternetStateChanged;
    }
}