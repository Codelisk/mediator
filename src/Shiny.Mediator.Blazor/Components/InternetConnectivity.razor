@using Shiny.Mediator.Infrastructure
@implements IDisposable
@inject IMediator Mediator
@inject IInternetService Internet
@if (!Internet.IsAvailable && NoInternetContent != null)
{
    @NoInternetContent
}

<script>
    window.addEventListener("online", function() {
        alert('You are now online');
    });
    window.addEventListener("offline", function() {
        alert('You are now offline');
    });
</script>

@code {
    [Parameter] public RenderFragment? NoInternetContent { get; set; }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Internet.StateChanged += OnInternetStateChanged;
    }

    async void OnInternetStateChanged(object? sender, bool e)
    {
        await InvokeAsync(StateHasChanged);
        await Mediator.Publish(new ConnectivityChanged(Internet.IsAvailable));
    }

    public void Dispose()
    {
        Internet.StateChanged -= OnInternetStateChanged;
    }
}