{
  MediatorDependencyInjectionExtensions.g.cs:
// <auto-generated>
// Code generated by Shiny Mediator ASP.NET Source Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
namespace TestAssembly;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.AspNet", "1.0.0")]
public static class MediatorDependencyInjectionExtensions
{
    /// <summary>
    /// Registers all generated mediator endpoint handlers
    /// </summary>
    public static global::Shiny.Mediator.ShinyMediatorBuilder AddGeneratedEndpoints(this global::Shiny.Mediator.ShinyMediatorBuilder builder)
    {
        builder.Services.AddScopedAsImplementedInterfaces<Test.Complex.ComplexUserHandler>();
        return builder;
    }
}
,
  MediatorEndpoints.g.cs:
// <auto-generated>
// Code generated by Shiny Mediator ASP.NET Source Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
namespace TestAssembly;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.AspNet", "1.0.0")]
public static class MediatorEndpoints
{
    /// <summary>
    /// Maps all generated mediator endpoints
    /// </summary>
    public static global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder MapGeneratedMediatorEndpoints(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder)
    {

        // ComplexUserHandler - GetUserDetail
        builder.MapGet(
            "/users/{userId}/details",
            async (
                [global::Microsoft.AspNetCore.Mvc.FromServices] global::Shiny.Mediator.IMediator mediator,
                [global::Microsoft.AspNetCore.Http.AsParameters] Test.Complex.GetUserDetailRequest request,
                global::System.Threading.CancellationToken cancellationToken
            ) =>
            {
                var result = await mediator
                    .Request(request, cancellationToken)
                    .ConfigureAwait(false);
                return global::Microsoft.AspNetCore.Http.Results.Ok(result);
            }
        )
            .WithName("GetUserDetail")
        ;
        return builder;
    }
}

}